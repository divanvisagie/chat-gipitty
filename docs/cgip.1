.TH CGIP 1 "2024-06-20" "version 0.5.0" "CGIP MAN PAGE"
.SH NAME
cgip \- interact with ChatGPT based on contextual input from files or standard input.
.SH SYNOPSIS
.B cgip
[OPTIONS] [QUERY] | [COMMAND]
.SH DESCRIPTION
Terminal client for interacting with Chat GPT that allows you to build and manipulate contexts.

Queries can be piped in through stdin and will be added to the context first. The query passed in as the first argument will then be added to the context second. Files read using \fB\-f\fR will be added last to the context.

You can specify a custom API endpoint (for example, to use a local LLM server or an alternative provider) by setting the \fBOPENAI_BASE_URL\fR environment variable.  
If not set, the default is \fIhttps://api.openai.com/v1\fR.
cgip targets the official OpenAI API; other endpoints may lack full functionality.

Example:
.P
.RS
export OPENAI_BASE_URL=http://localhost:11434/v1
.RE

.SS Web Search
cgip supports web search functionality through the \fB/search\fR command prefix. When you start your message with \fB/search\fR, the application will enable web search capabilities to provide up-to-date information from the internet. For GPT models, it automatically switches to \fBgpt-4o-search-preview\fR for optimal search results.

.SH COMMANDS
.TP
\fBview\fR
Render the context without running a query against the model.
.TP
\fBconfig\fR
Set or get default configuration values with your config.toml.
.TP
\fBsession\fR
Used for continuous chat session management and shell integration. To enable session caching in your terminal, add the following to your .bashrc or .zshrc:
.P
.RS
export CGIP_SESSION_NAME=$(uuid) # for each new terminal session to be unique 
export CGIP_SESSION_NAME=$(date -I) # for a session that will be the same for the entire day
.P
.RE
.TP
\fBimage\fR
Analyze images using vision-capable models. Requires the \fB--file\fR option to specify the image path. Supports JPEG, PNG, GIF, and WebP formats. Automatically uses vision-capable models like gpt-4o.
.TP
\fBtts\fR
Convert text to speech using OpenAI's TTS models. Text can be provided as an argument, read from stdin, or both (stdin and argument text are combined). Supports various voices (alloy, echo, fable, onyx, nova, shimmer) and audio formats (mp3, opus, aac, flac). Speed can be adjusted from 0.25 to 4.0.
.TP
\fBembedding\fR
Generate embeddings for text using OpenAI's embeddings endpoint. Provide text as an argument or via stdin. Use \fB--output\fR to write the vector to a file.
.TP
\fBagent\fR
Run an agentic session where the model issues \fBexecute\fR tool calls to run shell commands in the specified directory. Use \fB--input\fR to provide additional context files. Limit the number of actions with \fB--max-actions\fR.
.SH ARGUMENTS
.TP
\fB[QUERY]\fR
Optional. The primary query to send to the model. This is added to the context after stdin and file input.
.SH OPTIONS
.TP
\fB\-f\fR, \fB\-\-file=FILE\fR
Read query from a file. If a query is present, it is added to the prompt after the query. If this option is present, stdin is ignored.
.TP
\fB\-s\fR, \fB\-\-system\-prompt=SYSTEM_PROMPT\fR
Specify a system prompt.
.TP
\fB\-M\fR, \fB\-\-model=MODEL\fR
Specify the model to use. Defaults to `gpt-4`.
.TP
\fB\-l\fR, \fB\-\-list\-models\fR
List all the available models.
.TP
\fB\-p\fR, \fB\-\-show\-progress\fR
Show the progress indicator (might interfere with stdout).
.TP
\fB\-c\fR, \fB\-\-show\-context\fR
Output the full context used in the query, including chat context with all assistant and user messages.
.TP
\fB\-m\fR, \fB\-\-markdown\fR
Show context in a human-readable table.
.TP
\fB\-n\fR, \fB\-\-no\-session\fR
Don't use messages from the session in this request.
.TP
\fB\-j\fR, \fB\-\-jarjar\fR
Speak like Jar Jar Binks.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help (see more with '--help').
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version.
.SH EXAMPLES
.P
To pipe input from 'ls' and query about the files:
.P
.RS
ls | \fBcgip\fR "What can you tell me about these files?"
.P
.RE
To debug a failing build output:
.P
.RS
cargo build 2>&1 | \fBcgip\fR "What does this error mean?"
.RE
To use a custom API endpoint (e.g., with Ollama or a local LLM):
.P
.RS
export OPENAI_BASE_URL=http://localhost:11434/v1
cgip "Summarize this text"
.RE
Note: cgip targets the official OpenAI API, and alternative endpoints might not support all features.
To analyze an image:
.P
.RS
\fBcgip image\fR --file photo.jpg "What do you see in this image?"
.RE
To extract text from a screenshot:
.P
.RS
\fBcgip image\fR --file screenshot.png "Extract all text from this image"
.RE
To search for current information:
.P
.RS
\fBcgip\fR "/search What are the latest developments in AI?"
.RE
To convert text to speech:
.P
.RS
\fBcgip tts\fR "Hello, this is a test of text-to-speech"
.RE
To use a different voice and output file:
.P
.RS
\fBcgip tts\fR --voice nova --output welcome.mp3 "Welcome to our application"
.RE
To read text from stdin and convert to speech:
.P
.RS
echo "Text from stdin" | \fBcgip tts\fR --voice echo --output speech.mp3
.RE
To combine stdin and argument text:
.P
.RS
hostname | \fBcgip tts\fR "and that's all she wrote" --output combined.mp3
.RE
To generate embeddings for text:
.P
.RS
\fBcgip embedding\fR "Hello world"
.RE
Save an embedding to a file:
.P
.RS
echo "example" | \fBcgip embedding\fR --output vec.txt
.RE
To run the agent subcommand with a limit of three actions:
.P
.RS
\fBcgip agent\fR . "list files" --max-actions 3
.RE
.SH AUTHOR
Written by Divan Visagie and Anna L. Smith.
.SH "SEE ALSO"
.BR ls(1),
.BR cat(1),
.BR echo(1),
.BR tree(1)
